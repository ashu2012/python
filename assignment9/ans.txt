Ans5:

part(a):
on adding "print "My name is %s" % __name__" statement to mymodule1.py, mymodule2.py, and namespace_test.py following output is generated:

My name is mymodule1
My name is mymodule2
True
My name is __main__


As we run  namespace_test.py other file also get imported and their statements gets executed as well.

part(b)
But Now on adding the following to the bottom of mymodule1.py:

if __name__ == '__main__':
    print "This won't run if I'm  imported."

it will not get printed if we run namespace_test.py  but will be printed if we run mymodule1.py directly because there will be only one main function

Ans11:the value of __name__ when wordtools.py is imported from another module will be wordtools. and when it is run as a main program that value will be __main__.

Ans13:
    part(a): <type 'str'> would type(text) return after these lines have been executed.
    part(B): there aare from 32 to 126 printable ascii characters .so we are creating a count vector to store their count.
    part(c):    for letter in text:
                    counts[ord(letter)] += 1
                Itkeeps the count for each letter.
    part(d): the purpose of the display function is to check for values ascii2 values  10, 13, and 32 which belong to \r is carriage return, and \n is line feed and spaces.to show their count we need a representing symbol so we call display function otherwise they all look the same.
    part(e):it write the letter count n a table format
            Character   Count
            =================
            LF          3598
            SPACE       28917
            !           450
            "           113
            '           1762
            (           56
            )           56
            *           60
            ,           2418
            -           669
            .           978
            0           1
            3           1
            :           233
            ;           194
            ?           202
            A           638
            B           91
            C           145
            D           192
            E           188
            F           74
            G           83
            H           284
            I           733
            J           8
            K           82
            L           98
            M           200
            N           120
            O           176
            P           65
            Q           84
            R           140
            S           218
            T           472
            U           66
            V           42
            W           237
            X           4
            Y           114
            Z           1
            [           2
            ]           2
            _           4
            `           1109
            a           8153
            b           1384
            c           2254
            d           4739
            e           13387
            f           1927
            g           2448
            h           7090
            i           6781
            j           138
            k           1076
            l           4618
            m           1907
            n           6896
            o           7970
            p           1459
            q           125
            r           5298
            s           6282
            t           10216
            u           3402
            v           804
            w           2438
            x           144
            y           2148
            z           77
    part(F):
    for i in range(len(counts)):
    if counts[i]:
        outfile.write("%-12s%d\n" % (display(i), counts[i]))

     Above code prints the out put into the outfile . As shown above %s and %d is replaced with char and count respectively. -12 is used for spacing
     We have used if counts[i]  to display char having non negative count.


Ans 16: run program using
python ques16.py alice_in_wonderland.txt  alice_counts.dat. We are passing output filename and input filename using command line paraameters.
